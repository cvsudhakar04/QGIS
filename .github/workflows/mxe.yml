name: Windows cross build with MXE

on:
  push:
    branches:
      - master
      - release-**
    paths:
    - 'src/**'
    - 'external/**'
    - 'python/**'
    - 'tests/**'
    - 'ms-windows/**'
    - 'CMakeLists.txt'
    - '.github/workflows/mxe.yml'
  pull_request:
    branches:
      - master
      - release-**
    paths:
    - 'src/**'
    - 'external/**'
    - 'python/**'
    - 'tests/**'
    - 'ms-windows/**'
    - 'CMakeLists.txt'
    - '.github/workflows/mxe.yml'

jobs:
  build:

    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Dockerfile
      run: |
        cd ms-windows/mxe
        docker build -f mxe.Dockerfile --tag mxe-qt5-builder:latest

    - name: Prepare build cache for pull request
      uses: pat-s/always-upload-cache@v2.1.3
      if: github.event_name == 'pull_request'
      with:
        path: /home/runner/QGIS/.ccache
        key: mxe-ccache-${{ github.actor }}-${{ github.head_ref }}-${{ github.sha }}
        # The head_ref or source branch of the pull request in a workflow run.
        # The base_ref or target branch of the pull request in a workflow run.
        restore-keys: |
          mxe-ccache-${{ github.actor }}-${{ github.head_ref }}-
          mxe-ccache-${{ github.base_ref }}-
          mxe-ccache-refs/heads/master-

    - name: Prepare build cache for branch/tag
      # use a fork of actions/cache@v2 to upload cache even when the build or test failed
      uses: pat-s/always-upload-cache@v2.1.3
      if: github.event_name != 'pull_request'
      with:
        path: /home/runner/QGIS/.ccache
        # The branch or tag ref that triggered the workflow run. For branches this in the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>
        key: mxe-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          mxe-ccache-${{ github.ref }}-
          mxe-ccache-refs/heads/master-

    - name: Cross build with MXE
      run: |
        cd ${GITHUB_WORKSPACE}
        docker  run  \
            -v $(pwd):/root/QGIS \
            -w /root/QGIS --rm  \
            --user $(id -u):$(id -g) \
            mxe-qt5-builder:latest \
            /root/QGIS/ms-windows/mxe/build-mxe.sh

    - name: Rename artifact
      run: |
        cd $GITHUB_WORKSPACE
        mv qgis-mxe-release-*.zip qgis-mxe-release.zip

    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: QGIS for Windows 64bit
        path: qgis-mxe-release.zip

