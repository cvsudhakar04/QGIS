name: Write test failure comment

on:
  workflow_run:
    workflows: [ðŸ§ª QGIS tests]
    types:
      - completed

jobs:
  on-failure:
    strategy:
      matrix:
        qt-version: [ 5, 6 ]

    runs-on: ubuntu-latest
    steps:
      - name: 'Download artifact'
        id: download_artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "test-results-qt${{ matrix.qt-version }}"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/test-results-qt${{ matrix.qt-version }}.zip`, Buffer.from(download.data));
            core.setOutput('artifact_id', matchArtifact.id);

      - name: 'Unzip artifact'
        run: unzip test-results-qt${{ matrix.qt-version }}.zip

      - name: 'Post test report markdown summary as comment on PR'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let issue_number = Number(fs.readFileSync('./pr_number'));
            let body = "# Tests failed for Qt ${{ matrix.qt-version }}\n\n" + String(fs.readFileSync('./summary.md')) +
                 "\n\n**The full test report (included comparison of rendered vs expected images) can be found [here](https://github.com/qgis/QGIS/suites/" +  context.payload.workflow_run.check_suite_id + "/artifacts/${{steps.download_artifact.outputs.artifact_id}}).**\n\n" +
                 "Further documentation on the QGIS test infrastructure can be found in the [Developer's Guide](https://docs.qgis.org/latest/en/docs/developers_guide/unittesting.html).";
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: body
            });
