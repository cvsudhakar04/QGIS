/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsmetadatawidget.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsMetadataWidget : QWidget
{
%Docstring
 A wizard to edit metadata on a map layer.

.. versionadded:: 3.0
%End

%TypeHeaderCode
#include "qgsmetadatawidget.h"
%End
  public:

    QgsMetadataWidget( QWidget *parent, QgsMapLayer *layer = 0 );
%Docstring
Constructor for the wizard.

If ``layer`` is set, then this constructor automatically sets the widget's metadata() to match
the layer's metadata..

.. seealso:: :py:func:`setMetadata`
%End

    void setMetadata( const QgsLayerMetadata &metadata );
%Docstring
Sets the ``metadata`` to display in the widget.

This method can be called after constructing a QgsMetadataWidget in order
to set the displayed metadata to custom, non-layer based metadata.

.. seealso:: :py:func:`metadata`
%End

    QgsLayerMetadata metadata();
%Docstring
Returns a QgsLayerMetadata object representing the current state of the widget.

.. seealso:: :py:func:`saveMetadata`
%End

    void saveMetadata( QgsLayerMetadata &layerMetadata );
%Docstring
Save all fields in a QgsLayerMetadata object.

.. seealso:: :py:func:`metadata`

.. seealso:: :py:func:`acceptMetadata`

.. seealso:: :py:func:`checkMetadata`
%End

    bool checkMetadata();
%Docstring
Check if values in the wizard are correct.

.. seealso:: :py:func:`saveMetadata`
%End

    void crsChanged();
%Docstring
If the CRS is updated.
%End

    void acceptMetadata();
%Docstring
Saves the metadata to the layer.
%End

    static QMap<QString, QString> parseLanguages();
%Docstring
Returns a list of languages available by default in the wizard.
%End

    static QStringList parseLicenses();
%Docstring
Returns a list of licences available by default in the wizard.
%End

    static QStringList parseLinkTypes();
%Docstring
Returns a list of link types available by default in the wizard.

.. seealso:: :py:func:`https`
%End

    static QStringList parseMimeTypes();
%Docstring
Returns a list of MIME types available by default in the wizard.

.. seealso:: :py:func:`https`
%End

    static QMap<QString, QString> parseTypes();
%Docstring
Returns a list of types available by default in the wizard.
%End

    void setMapCanvas( QgsMapCanvas *canvas );
%Docstring
Sets a map ``canvas`` associated with the widget.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsmetadatawidget.h                                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
