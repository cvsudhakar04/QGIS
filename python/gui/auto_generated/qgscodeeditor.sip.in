/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgscodeeditor.h                                              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsCodeEditor : QsciScintilla
{
%Docstring
A text editor based on QScintilla2.

.. note::

   may not be available in Python bindings, depending on platform support

.. versionadded:: 2.6
%End

%TypeHeaderCode
#include "qgscodeeditor.h"
%End
  public:

    QgsCodeEditor( QWidget *parent /TransferThis/ = 0, const QString &title = QString(), bool folding = false, bool margin = false );
%Docstring
Construct a new code editor.

:param parent: The parent QWidget
:param title: The title to show in the code editor dialog
:param folding: ``False``: Enable folding for code editor
:param margin: ``False``: Enable margin for code editor

.. versionadded:: 2.6
%End

    void setTitle( const QString &title );
%Docstring
Set the widget title

:param title: widget title
%End

    void setMarginVisible( bool margin );
%Docstring
Set margin visible state

:param margin: Set margin in the editor
%End
    bool marginVisible();

    void setFoldingVisible( bool folding );
%Docstring
Set folding visible state

:param folding: Set folding in the editor
%End
    bool foldingVisible();

    void insertText( const QString &text );
%Docstring
Insert text at cursor position, or replace any selected text if user has
made a selection.

:param text: The text to be inserted
%End

    enum class ColorRole
    {
      Default,
      Keyword,
      Class,
      Method,
      Decoration,
      Number,
      Comment,
      CommentLine,
      CommentBlock,
      Background,
      Cursor,
      CaretLine,
      SingleQuote,
      DoubleQuote,
      TripleSingleQuote,
      TripleDoubleQuote,
      Operator,
      QuotedOperator,
      Identifier,
      QuotedIdentifier,
      Tag,
      UnknownTag,
      MarginBackground,
      MarginForeground,
      SelectionBackground,
      SelectionForeground,
      MatchedBraceBackground,
      MatchedBraceForeground,
      Edge,
      Fold,
      Error,
    };

    static QColor defaultColor( ColorRole role, const QString &theme = QString() );
%Docstring
Returns the default color for the specified ``role``.

The optional ``theme`` argument can be used to specify a color ``theme``. A blank
``theme`` indicates the default color scheme.

Possible ``theme`` values are:

- (empty string) follow application default colors
- solarized
- solarized_dark

.. versionadded:: 3.16
%End

    static QColor color( ColorRole role );
%Docstring
Returns the color to use in the editor for the specified ``role``.

This color will be the default theme color for the role, unless the user has manually
selected a custom color scheme for the editor.

.. seealso:: :py:func:`setColor`

.. versionadded:: 3.16
%End

    static void setColor( ColorRole role, const QColor &color );
%Docstring
Sets the ``color`` to use in the editor for the specified ``role``.

This color will be stored as the new default color for the role, to be used for all code editors.

Set ``color`` to an invalid QColor in order to clear the stored color value and reset it to
the default color.

.. seealso:: :py:func:`color`

.. versionadded:: 3.16
%End

  protected:

    bool isFixedPitch( const QFont &font );

    virtual void focusOutEvent( QFocusEvent *event );

    virtual void keyPressEvent( QKeyEvent *event );


    QFont getMonospaceFont();

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgscodeeditor.h                                              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
