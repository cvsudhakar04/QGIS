/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgscoordinateoperationwidget.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/




class QgsCoordinateOperationWidget : QWidget
{
%Docstring
A widget for selecting the coordinate operation to use when transforming between
a source and destination coordinate reference system.

.. versionadded:: 3.12
%End

%TypeHeaderCode
#include "qgscoordinateoperationwidget.h"
%End
  public:

    struct OperationDetails
    {
      int sourceTransformId;

      int destinationTransformId;

      QString proj;
    };

    QgsCoordinateOperationWidget( QWidget *parent = 0 );
%Docstring
Constructor for QgsCoordinateOperationWidget.
%End

    ~QgsCoordinateOperationWidget();

    QgsCoordinateReferenceSystem sourceCrs() const;
%Docstring
Returns the source CRS for the operations shown in the widget.

.. seealso:: :py:func:`setSourceCrs`

.. seealso:: :py:func:`destinationCrs`
%End

    QgsCoordinateReferenceSystem destinationCrs() const;
%Docstring
Returns the destination CRS for the operations shown in the widget.

.. seealso:: :py:func:`setDestinationCrs`

.. seealso:: :py:func:`sourceCrs`
%End

    void setSourceCrs( const QgsCoordinateReferenceSystem &crs );
%Docstring
Sets the source ``crs`` for the operations shown in the widget.

.. seealso:: :py:func:`sourceCrs`

.. seealso:: :py:func:`setDestinationCrs`
%End

    void setDestinationCrs( const QgsCoordinateReferenceSystem &crs );
%Docstring
Sets the destination ``crs`` for the operations shown in the widget.

.. seealso:: :py:func:`destinationCrs`

.. seealso:: :py:func:`setSourceCrs`
%End

    void setMapCanvas( QgsMapCanvas *canvas );
%Docstring
Sets a map ``canvas`` to link to the widget, which allows the widget's choices to reflect
the current canvas state.
%End

    void setShowMakeDefault( bool show );
%Docstring
Sets whether the "make default" checkbox should be shown.
%End

    QgsCoordinateOperationWidget::OperationDetails defaultOperation() const;
%Docstring
Returns the details of the default operation suggested by the widget.
%End

    QgsCoordinateOperationWidget::OperationDetails selectedOperation() const;
%Docstring
Returns the details of the operation currently selected within the widget.

.. seealso:: :py:func:`setSelectedOperation`
%End

    void setSelectedOperation( const QgsCoordinateOperationWidget::OperationDetails &operation ) const;
%Docstring
Sets the details of the ``operation`` currently selected within the widget.

.. seealso:: :py:func:`selectedOperation`
%End

  signals:

    void operationChanged();
%Docstring
Emitted when the operation selected in the dialog is changed.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgscoordinateoperationwidget.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
