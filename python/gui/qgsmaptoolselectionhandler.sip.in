/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsmaptoolselectionhandler.h                                 *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsDistanceWidget : QWidget
{
%Docstring
 Spinner widget for radius selection.

.. versionadded:: 3.2
%End

%TypeHeaderCode
#include "qgsmaptoolselectionhandler.h"
%End
  public:

    explicit QgsDistanceWidget( const QString &label = QString(), QWidget *parent = 0 );
%Docstring
Constrructor
%End

    void setDistance( double distance );
%Docstring
distance setter
%End
    double distance();
%Docstring
distance getter
%End

    QgsDoubleSpinBox *editor();
%Docstring
editor getter
%End

  signals:
    void distanceChanged( double distance );
%Docstring
distance changed signal
%End
    void distanceEditingFinished( double distance, const Qt::KeyboardModifiers &modifiers );
%Docstring
distanceEditingFinished signal
%End
    void addDistanceWidget();
%Docstring
addDistanceWidget signal
%End
    void distanceEditingCanceled();
%Docstring
distanceEditingCanceled signal
%End

  protected:
    virtual bool eventFilter( QObject *obj, QEvent *ev );


};



class QgsMapToolSelectionHandler: QObject
{
%Docstring
 Map tool for selecting geometry in layers

.. versionadded:: 3.2
%End

%TypeHeaderCode
#include "qgsmaptoolselectionhandler.h"
%End
  public:

    enum SelectionMode
    {
      //! SelectSimple
      SelectSimple,
      //! SelectPolygon
      SelectPolygon,
      //! SelectFreehand
      SelectFreehand,
      //! SelectRadius
      SelectRadius
    };

    QgsMapToolSelectionHandler( QgsMapCanvas *canvas, QgsMapToolSelectionHandler::SelectionMode getSelectionMode = QgsMapToolSelectionHandler::SelectionMode::SelectSimple );
%Docstring
constructor
%End

    ~QgsMapToolSelectionHandler();

    QgisInterface *mQgisInterface;

    void canvasMoveEvent( QgsMapMouseEvent *e );
%Docstring
Overridden mouse move event
%End
    void canvasPressEvent( QgsMapMouseEvent *e );
%Docstring
Overridden mouse press event
%End
    void canvasReleaseEvent( QgsMapMouseEvent *e );
%Docstring
Overridden mouse releasae event
%End
    bool escapeSelection( QKeyEvent *e );
%Docstring
Cancel selection - handles escape press event
%End

    void deactivate();
%Docstring
To deactivate handler often within map tool deactivation.
%End

    void selectFeaturesMoveEvent( QgsMapMouseEvent *e );
%Docstring
Mouse move event handling for simple selection
%End
    void selectFeaturesReleaseEvent( QgsMapMouseEvent *e );
%Docstring
Mouse release event handling for simple selection
%End
    void selectFeaturesPressEvent( QgsMapMouseEvent *e );
%Docstring
Mouse press event handling for simple selection
%End

    void selectPolygonMoveEvent( QgsMapMouseEvent *e );
%Docstring
Mouse move event handling for polygon selection
%End
    void selectPolygonPressEvent( QgsMapMouseEvent *e );
%Docstring
Mouse press event handling for polygon selection
%End

    void selectFreehandMoveEvent( QgsMapMouseEvent *e );
%Docstring
Mouse move event handling for freehand selection
%End
    void selectFreehandReleaseEvent( QgsMapMouseEvent *e );
%Docstring
Mouse press event handling for freehand selection
%End

    void selectRadiusMoveEvent( QgsMapMouseEvent *e );
%Docstring
Mouse move event handling for radius selection
%End
    void selectRadiusReleaseEvent( QgsMapMouseEvent *e );
%Docstring
Mouse press event handling for radius selection
%End

    void initRubberBand();
%Docstring
Initialization of the rubberband
%End

    void setIface( QgisInterface *iface );
%Docstring
Interface variable setter - needed for messages
%End

    QgsGeometry getSelectedGeometry();
%Docstring
mSelectedGeometry getter
%End
    void setSelectedGeometry( QgsGeometry geometry, Qt::KeyboardModifiers modifiers = Qt::NoModifier );
%Docstring
mSelectedGeometry setter
%End

    SelectionMode getSelectionMode();
%Docstring
mSelectionMode getter
%End
    void setSelectionMode( SelectionMode mode );
%Docstring
mSelectionMode setter
%End

    bool getSelectionActive();
%Docstring
mSelectionActive getter
%End

    QgsRubberBand *getSelectionRubberBand();
%Docstring
mSelectionRubberBand getter
%End
    void setSelectionRubberBand( QgsRubberBand *selectionRubberBand );
%Docstring
mSelectionRubberBand setter
%End

    bool getJustFinishedSelection() const;
%Docstring
mJustFinishedSelection getter
%End
    void setJustFinishedSelection( bool justFinishedSelection );
%Docstring
mJustFinishedSelection setter
%End

    QgsPointXY getRadiusCenter() const;
%Docstring
mRadiusCenter getter
%End

    QPoint getInitDragPos() const;
%Docstring
mInitDragPos getter
%End

  signals:
    void geometryChanged( Qt::KeyboardModifiers modifiers = Qt::NoModifier );
%Docstring
emitted when mSelectedGeometry has been changed
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/gui/qgsmaptoolselectionhandler.h                                 *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
