/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrasterrange.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





typedef QList<QgsRasterRange> QgsRasterRangeList;

class QgsRasterRange
{
%Docstring
Raster values range container. Represents range of values between min and max
including min and max value.
%End

%TypeHeaderCode
#include "qgsrasterrange.h"
%End
  public:

    enum BoundsType
    {
      IncludeMinAndMax,
      IncludeMax,
      IncludeMin,
      Exclusive,
    };

    QgsRasterRange();
%Docstring
Default constructor, both min and max value for the range will be set to NaN.
%End

    QgsRasterRange( double min, double max, BoundsType bounds = IncludeMinAndMax );
%Docstring
Constructor for a range with the given ``min`` and ``max`` values.

The ``bounds`` argument dictates how the min and max value themselves
will be handled by the range.
%End

    double min() const;
%Docstring
Returns the minimum value for the range.

.. seealso:: :py:func:`setMin`
%End

    double max() const;
%Docstring
Returns the maximum value for the range.

.. seealso:: :py:func:`setMax`
%End

    BoundsType bounds() const;
%Docstring
Returns the bounds type for the range, which specifies
whether or not the min and max values themselves are included
in the range.

.. seealso:: :py:func:`setBounds`

.. versionadded:: 3.4
%End

    double setMin( double min );
%Docstring
Sets the minimum value for the range.

.. seealso:: :py:func:`min`
%End

    double setMax( double max );
%Docstring
Sets the maximum value for the range.

.. seealso:: :py:func:`max`
%End

    void setBounds( BoundsType type );
%Docstring
Setss the bounds ``type`` for the range, which specifies
whether or not the min and max values themselves are included
in the range.

.. seealso:: :py:func:`bounds`

.. versionadded:: 3.4
%End

    bool operator==( QgsRasterRange o ) const;

    static bool contains( double value, const QgsRasterRangeList &rangeList );
%Docstring
Tests if a ``value`` is within the list of ranges

:param value: value
:param rangeList: list of ranges

:return: true if value is in at least one of ranges
%End

};



/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsrasterrange.h                                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
