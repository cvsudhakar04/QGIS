/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsattributetablerenderer.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/



class QgsAttributeTableRenderer : QgsRasterRenderer
{
%Docstring(signature="appended")
*************************************************************************
qgsattributetablerenderer.h - :py:class:`QgsAttributeTableRenderer`

---------------------
  begin                : 6.12.2021
  copyright            : (C) 2021 by Alessandro Pasotti
  email                : elpaso at itopen dot it
  **************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "qgsattributetablerenderer.h"
%End
  public:
    QgsAttributeTableRenderer( QgsRasterInterface *input, int band = -1, QgsRasterShader *shader /Transfer/ = 0 );


    virtual QgsAttributeTableRenderer *clone() const /Factory/;

%Docstring
QgsAttributeTableRenderer cannot be copied. Use :py:func:`~QgsAttributeTableRenderer.clone` instead.
%End

    static QgsRasterRenderer *create( const QDomElement &elem, QgsRasterInterface *input ) /Factory/;

    virtual QgsRasterBlock *block( int bandNo, const QgsRectangle &extent, int width, int height, QgsRasterBlockFeedback *feedback = 0 ) /Factory/;


    virtual void writeXml( QDomDocument &doc, QDomElement &parentElem ) const;

    virtual QList< QPair< QString, QColor > > legendSymbologyItems() const;

    virtual QList<QgsLayerTreeModelLegendNode *> createLegendNodes( QgsLayerTreeLayer *nodeLayer ) /Factory/;

    virtual QList<int> usesBands() const;

    virtual void toSld( QDomDocument &doc, QDomElement &element, const QVariantMap &props = QVariantMap() ) const;

    virtual bool accept( QgsStyleEntityVisitorInterface *visitor ) const;


    int band() const;
%Docstring
Returns the band used by the renderer
%End

    void setBand( int bandNo );
%Docstring
Sets the band used by the renderer.

.. seealso:: :py:func:`band`
%End

  private:
    QgsAttributeTableRenderer( const QgsAttributeTableRenderer & );
    const QgsAttributeTableRenderer &operator=( const QgsAttributeTableRenderer & );
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/raster/qgsattributetablerenderer.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
