/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/processing/qgsprocessingparametermeshdataset.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/



class QgsProcessingParameterMeshDatasetGroups : QgsProcessingParameterDefinition
{
%Docstring
A parameter for processing algorithms that need a list of mesh dataset groups
A valid value for this parameter is a list (QVariantList) of dataset groups index in the mesh layer scope

.. note::

   This parameter is dependent on a mesh layer parameter (see QgsProcessingParameterMeshLayer)

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsprocessingparametermeshdataset.h"
%End
  public:
    QgsProcessingParameterMeshDatasetGroups( const QString &name,
        const QString &description = QString(),
        const QString &meshLayerParameterName = QString(),
        QgsMeshDatasetGroupMetadata::DataType dataType = QgsMeshDatasetGroupMetadata::DataOnVertices,
        bool optional = false );
%Docstring
Constructor

:param name: name of the parameter
:param description: description of the parameter
:param meshLayerParameterName: name of the associated mesh layer parameter
:param dataType: data type supported by the parameter
:param optional: whether the parameter is optional
%End

    virtual QgsProcessingParameterDefinition *clone() const;

    virtual QString type() const;

    virtual bool checkValueIsAcceptable( const QVariant &input, QgsProcessingContext *context = 0 ) const;

    virtual QString valueAsPythonString( const QVariant &value, QgsProcessingContext &context ) const;

    virtual QString asPythonString( QgsProcessing::PythonOutputType outputType ) const;

    virtual QStringList dependsOnOtherParameters() const;


    static QString typeName();
%Docstring
Returns the type name for the parameter class.
%End

    QString meshLayerParameterName() const;
%Docstring
Returns the name of the mesh layer parameter
%End

    QgsMeshDatasetGroupMetadata::DataType dataType() const;
%Docstring
Return the data type supported by the parameter
%End

};

class QgsProcessingParameterTypeMeshDatasetGroups : QgsProcessingParameterType
{
%Docstring
Parameter type definition for QgsProcessingParameterMeshDatasetGroups.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsprocessingparametermeshdataset.h"
%End
  public:
    virtual QgsProcessingParameterDefinition *create( const QString &name ) const /Factory/;

    virtual QString description() const;

    virtual QString name() const;

    virtual QString id() const;

    virtual QString pythonImportString() const;

    virtual QString className() const;

    virtual QStringList acceptedPythonTypes() const;
};


class QgsProcessingParameterMeshDatasetTime : QgsProcessingParameterDefinition
{
%Docstring
A parameter for processing algorithms that need a list of mesh dataset index from time parameter
A valid value for this parameter is a map (QVariantMap) with in this form
-"type" : the type of time settings "current-canvas-time", "defined-date-time", "dataset-time-step" or "none" if all the dataset groups are static
-"value" : nothing if type is "current-canvas-time", QDateTime if "defined-date-time"
  or, for "dataset_time_step",  list of two int representing the dataset index that is the reference for the time step

.. note::

   This parameter is dependent on a mesh layer parameter (:py:class:`QgsProcessingParameterMeshLayer`)
   and on mesh datast group parameter (:py:class:`QgsProcessingParameterMeshDatasetGroups`)

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsprocessingparametermeshdataset.h"
%End
  public:
    QgsProcessingParameterMeshDatasetTime(
      const QString &name,
      const QString &description = QString(),
      const QString &meshLayerParameterName = QString(),
      const QString &datasetGroupParameterName = QString(),
      bool optional = false );
%Docstring
Constructor

:param name: name of the parameter
:param description: description of the parameter
:param meshLayerParameterName: name of the associated mesh layer parameter (:py:class:`QgsProcessingParameterMeshLayer`)
:param datasetGroupParameterName: name of the associated dataset group parameter (:py:class:`QgsProcessingParameterMeshDatasetGroups`)
:param optional: whether the parameter is optional
%End

    virtual QgsProcessingParameterDefinition *clone() const;

    virtual QString type() const;

    virtual bool checkValueIsAcceptable( const QVariant &input, QgsProcessingContext *context = 0 ) const;

    virtual QString valueAsPythonString( const QVariant &value, QgsProcessingContext &context ) const;

    virtual QString asPythonString( QgsProcessing::PythonOutputType outputType ) const;

    virtual QStringList dependsOnOtherParameters() const;


    static QString typeName();
%Docstring
Returns the type name for the parameter class.
%End

    QString meshLayerParameterName() const;
%Docstring
Returns the name of the mesh layer parameter
%End

    QString datasetGroupParameterName() const;
%Docstring
Returns the name of the dataset groups parameter
%End

};

class QgsProcessingParameterTypeMeshDatasetTime: QgsProcessingParameterType
{
%Docstring
Parameter type definition for QgsProcessingParameterMeshDatasetTime.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgsprocessingparametermeshdataset.h"
%End
  public:
    virtual QgsProcessingParameterDefinition *create( const QString &name ) const /Factory/;

    virtual QString description() const;

    virtual QString name() const;

    virtual QString id() const;

    virtual QString pythonImportString() const;

    virtual QString className() const;

    virtual QStringList acceptedPythonTypes() const;
};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/processing/qgsprocessingparametermeshdataset.h              *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
