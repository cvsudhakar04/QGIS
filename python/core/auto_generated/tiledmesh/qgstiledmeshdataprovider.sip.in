/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/tiledmesh/qgstiledmeshdataprovider.h                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsTiledMeshDataProvider: QgsDataProvider
{
%Docstring(signature="appended")
Base class for data providers for :py:class:`QgsTiledMeshLayer`

.. versionadded:: 3.34
%End

%TypeHeaderCode
#include "qgstiledmeshdataprovider.h"
%End
  public:


    QgsTiledMeshDataProvider( const QString &uri,
                              const QgsDataProvider::ProviderOptions &providerOptions,
                              QgsDataProvider::ReadFlags flags = QgsDataProvider::ReadFlags() );
%Docstring
Constructor for QgsTiledMeshDataProvider
%End

    ~QgsTiledMeshDataProvider();

    QgsTiledMeshDataProvider( const QgsTiledMeshDataProvider &other );
%Docstring
Copy constructor.
%End


    virtual Qgis::TiledMeshProviderCapabilities capabilities() const;
%Docstring
Returns flags containing the supported capabilities for the data provider.
%End

    virtual QgsTiledMeshDataProvider *clone() const = 0 /Factory/;
%Docstring
Returns a clone of the data provider.
%End

    virtual QString htmlMetadata() const;
%Docstring
Returns metadata in a format suitable for feeding directly
into a subset of the GUI properties "Metadata" tab.
%End

    virtual const QgsCoordinateReferenceSystem meshCrs() const = 0;
%Docstring
Returns the original coordinate reference system for the tiled mesh data.

This may differ from the :py:func:`QgsDataProvider.crs()`, which is the best CRS representation
for the data provider for 2D use.

.. warning::

   Care must be taken to ensure that :py:func:`~QgsTiledMeshDataProvider.meshCrs` is used instead of :py:func:`~QgsTiledMeshDataProvider.crs` whenever
   transforming bounding volumes or geometries associated with the provider.
%End

    virtual const QgsAbstractTiledMeshNodeBoundingVolume *boundingVolume() const = 0;
%Docstring
Returns the bounding volume for the data provider.

This corresponds to the root node bounding volume.

.. warning::

   Coordinates in the returned volume are in the :py:func:`~QgsTiledMeshDataProvider.meshCrs` reference system, not the :py:func:`QgsDataProvider.crs()` system.
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/tiledmesh/qgstiledmeshdataprovider.h                        *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
