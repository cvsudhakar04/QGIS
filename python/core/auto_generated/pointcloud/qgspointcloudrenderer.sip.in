/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudrenderer.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsPointCloudRenderContext
{
%Docstring

Encapsulates the render context for a 2D point cloud rendering operation.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudrenderer.h"
%End
  public:

    QgsPointCloudRenderContext( QgsRenderContext &context, const QgsVector3D &scale, const QgsVector3D &offset );
%Docstring
Constructor for QgsPointCloudRenderContext.

The ``scale`` and ``offset`` arguments specify the scale and offset of the layer's int32 coordinates
compared to CRS coordinates respectively.
%End



    QgsRenderContext &renderContext();
%Docstring
Returns a reference to the context's render context.
%End


    QgsVector3D scale() const;
%Docstring
Returns the scale of the layer's int32 coordinates compared to CRS coords.
%End

    QgsVector3D offset() const;
%Docstring
Returns the offset of the layer's int32 coordinates compared to CRS coords.
%End

    long pointsRendered() const;
%Docstring
Returns the total number of points rendered.
%End

    void incrementPointsRendered( long count );
%Docstring
Increments the count of points rendered by the specified amount.

It is a point cloud renderer's responsibility to correctly call this after
rendering a block of points.
%End

  private:
    QgsPointCloudRenderContext( const QgsPointCloudRenderContext &rh );
};


class QgsPointCloudRenderer
{
%Docstring

Abstract base class for 2d point cloud renderers.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudrenderer.h"
%End
  public:

    static QgsPointCloudRenderer *defaultRenderer() /Factory/;
%Docstring
Returns a new default point cloud renderer.

Caller takes ownership of the returned renderer.
%End

    virtual ~QgsPointCloudRenderer();

    virtual QgsPointCloudRenderer *clone() const = 0 /Factory/;
%Docstring
Create a deep copy of this renderer. Should be implemented by all subclasses
and generate a proper subclass.
%End

    virtual void renderBlock( const QgsPointCloudBlock *block, QgsPointCloudRenderContext &context ) = 0;
%Docstring
Renders a ``block`` of point cloud data using the specified render ``context``.
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudrenderer.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
