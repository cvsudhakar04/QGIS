/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudattributebyramprenderer.h           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/





class QgsPointCloudAttributeByRampRenderer : QgsPointCloudRenderer
{
%Docstring
An RGB renderer for 2d visualisation of point clouds using embedded red, green and blue attributes.

.. versionadded:: 3.18
%End

%TypeHeaderCode
#include "qgspointcloudattributebyramprenderer.h"
%End
  public:

    QgsPointCloudAttributeByRampRenderer();
%Docstring
Constructor for QgsPointCloudAttributeByRampRenderer.
%End

    virtual QString type() const;

    virtual QgsPointCloudRenderer *clone() const;

    virtual void renderBlock( const QgsPointCloudBlock *block, QgsPointCloudRenderContext &context );

    virtual QDomElement save( QDomDocument &doc, const QgsReadWriteContext &context ) const;

    virtual void startRender( QgsPointCloudRenderContext &context );

    virtual void stopRender( QgsPointCloudRenderContext &context );

    virtual QSet< QString > usedAttributes( const QgsPointCloudRenderContext &context ) const;


    static QgsPointCloudRenderer *create( QDomElement &element, const QgsReadWriteContext &context ) /Factory/;
%Docstring
Creates an RGB renderer from an XML ``element``.
%End

    QString attribute() const;
%Docstring
Returns the attribute to use for the renderer.

.. seealso:: :py:func:`setAttribute`
%End

    void setAttribute( const QString &attribute );
%Docstring
Sets the ``attribute`` to use for the renderer.

.. seealso:: :py:func:`attribute`
%End

    QgsColorRamp *colorRamp() const;
%Docstring
Returns the color ramp used for rendering the attribute.

.. seealso:: :py:func:`setColorRamp`
%End

    void setColorRamp( QgsColorRamp *ramp /Transfer/ );
%Docstring
Sets the color ``ramp`` used for rendering the attribute.

Ownership of ``ramp`` is transferrred to the renderer.

.. seealso:: :py:func:`colorRamp`
%End

    double min() const;
%Docstring
Returns min
%End
    void setMin( double value );
%Docstring
Sets min
%End

    double max() const;
%Docstring
Returns max
%End

    void setMax( double value );
%Docstring
Sets max
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/pointcloud/qgspointcloudattributebyramprenderer.h           *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
